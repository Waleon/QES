
#include "Lexer.h"
#include "Token.h"

%token-prefix=T_
%toupper
%no-enums
%namespace=Lexer

%%
__asm
__asm__
__attribute
__attribute__
__const
__const__
__inline
__inline__
__typeof
__typeof__
__volatile
__volatile__
asm
auto
bool
break
case
catch
char
class
const
const_cast
continue
default
delete
do
double
dynamic_cast
else
enum
explicit
export
extern
false
float
for
friend
goto
if
inline
int
long
mutable
namespace
new
operator
private
protected
public
register
reinterpret_cast
return
short
signed
sizeof
static
static_cast
struct
switch
template
this
throw
true
try
typedef
typeid
typename
typeof
union
unsigned
using
virtual
void
volatile
wchar_t
while
